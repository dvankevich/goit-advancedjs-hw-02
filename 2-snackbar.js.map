{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst iziCommon = {\n  message: 'Common message',\n  theme: 'dark',\n  position: 'topRight',\n  titleColor: '#fff',\n  titleSize: '16px',\n  titleLineHeight: '1.5',\n  messageColor: '#fff',\n  messageSize: '16px',\n  messageLineHeight: '1.5',\n  imageWidth: 24,\n};\n\nconst notifications = {\n  success: {\n    ...iziCommon,\n    title: 'OK',\n    color: '#59a10d',\n    iconUrl: 'ok-icon.svg',\n  },\n  error: {\n    ...iziCommon,\n    title: 'Error',\n    color: '#ef4040',\n    iconUrl: 'error-icon.svg',\n  },\n  warning: {\n    ...iziCommon,\n    title: 'Warning',\n    color: '#ffa000',\n    iconUrl: 'caution-icon.svg',\n  },\n};\n\nconst button = document.querySelector('button');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stateInputs = document.querySelectorAll('input[name=\"state\"]');\nconst stateForm = document.querySelector('.form');\n\nlet promiseDelay = delayInput.value;\n\ndelayInput.addEventListener('change', () => {\n  promiseDelay = delayInput.value;\n});\n\nconst handlePromise = async (state, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(`✅ Fulfilled promise in ${delay} ms`);\n      } else {\n        reject(`❌ Rejected promise in ${delay} ms`);\n      }\n    }, delay);\n  });\n};\n\nconst handleClick = async event => {\n  event.preventDefault();\n\n  const selectedState = [...stateInputs].find(input => input.checked)?.value;\n\n  if (selectedState && promiseDelay) {\n    stateForm.reset();\n    try {\n      const result = await handlePromise(selectedState, promiseDelay);\n      iziToast.success({ ...notifications.success, message: result.slice(1) });\n      //console.log(result);\n    } catch (error) {\n      iziToast.error({ ...notifications.error, message: error.slice(1) });\n      //console.log(error);\n    }\n    //stateForm.reset();\n  } else {\n    iziToast.warning({\n      ...notifications.warning,\n      message: 'Please fill in all fields.',\n    });\n  }\n};\n\nbutton.addEventListener('click', handleClick);\n"],"names":["iziCommon","notifications","button","delayInput","stateInputs","stateForm","promiseDelay","handlePromise","state","delay","resolve","reject","handleClick","event","selectedState","input","result","iziToast","error"],"mappings":"wIAKA,MAAMA,EAAY,CAChB,QAAS,iBACT,MAAO,OACP,SAAU,WACV,WAAY,OACZ,UAAW,OACX,gBAAiB,MACjB,aAAc,OACd,YAAa,OACb,kBAAmB,MACnB,WAAY,EACd,EAEMC,EAAgB,CACpB,QAAS,CACP,GAAGD,EACH,MAAO,KACP,MAAO,UACP,QAAS,aACb,EACE,MAAO,CACL,GAAGA,EACH,MAAO,QACP,MAAO,UACP,QAAS,gBACb,EACE,QAAS,CACP,GAAGA,EACH,MAAO,UACP,MAAO,UACP,QAAS,kBACb,CACA,EAEME,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAc,SAAS,iBAAiB,qBAAqB,EAC7DC,EAAY,SAAS,cAAc,OAAO,EAEhD,IAAIC,EAAeH,EAAW,MAE9BA,EAAW,iBAAiB,SAAU,IAAM,CAC1CG,EAAeH,EAAW,KAC5B,CAAC,EAED,MAAMI,EAAgB,MAAOC,EAAOC,IAC3B,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQ,0BAA0BD,CAAK,KAAK,EAE5CE,EAAO,yBAAyBF,CAAK,KAAK,CAE9C,EAAGA,CAAK,CACV,CAAC,EAGGG,EAAc,MAAMC,GAAS,CACjCA,EAAM,eAAc,EAEpB,MAAMC,EAAgB,CAAC,GAAGV,CAAW,EAAE,KAAKW,GAASA,EAAM,OAAO,GAAG,MAErE,GAAID,GAAiBR,EAAc,CACjCD,EAAU,MAAK,EACf,GAAI,CACF,MAAMW,EAAS,MAAMT,EAAcO,EAAeR,CAAY,EAC9DW,EAAS,QAAQ,CAAE,GAAGhB,EAAc,QAAS,QAASe,EAAO,MAAM,CAAC,EAAG,CAEzE,OAASE,EAAO,CACdD,EAAS,MAAM,CAAE,GAAGhB,EAAc,MAAO,QAASiB,EAAM,MAAM,CAAC,EAAG,CAEpE,CAEF,MACED,EAAS,QAAQ,CACf,GAAGhB,EAAc,QACjB,QAAS,4BACf,CAAK,CAEL,EAEAC,EAAO,iBAAiB,QAASU,CAAW"}